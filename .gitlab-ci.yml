# Build the wheel distribution package and upload it to the GitLab PyPi repository.
# Save the wheel package as an artifact to be used in later stage.
pypackage_build_and_upload:
  image: python:latest
  stage: build
  script:
    - pip install build twine
    - python3 -m build 
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi ./dist/*
  artifacts:
    paths:
      - ./dist/*.whl


# Run the tests using Docker Compose.
# Uses the exit code of the integration_tests service container to determine success.
tests:
  image: docker:latest
  stage: test
  script:
    - docker compose -f compose-test-runner.yaml -p ci up --exit-code-from integration_tests --build 